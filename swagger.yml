swagger: "2.0"
info:
  description: "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key special-key to test the authorization     filters."
  version: "1.0.0"
  title: "Stock Management System"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "petstore.swagger.io"
basePath: "/v2"
tags:
- name: "category"
  description: ""
- name: "product"
  description: ""
schemes:
- "https"
- "http"
paths:
  /category:
    get:
      tags:
      - "category"
      summary: "List all categories"
      responses:
        '200':
          description: "All category listed"
          schema:
            type: array
            items:
              $ref: "#/definitions/Category"
    post:
      tags:
      - "category"
      summary: "Add a new category"
      description: ""
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Category object that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/Category"
      responses:
        "200":
          description: "Category added"
        "405":
          description: "Invalid input"
  /category/{id}:
    get:
      tags:
      - "category"
      summary: "Retrieve category name and descriptions"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of category"
        required: true
        type: "integer"
        format: "int64"
      responses:
        '200':
          description: "Category metadata"
          schema:
            $ref: "#/definitions/Category"
    put:
      tags:
      - "category"
      summary: "Update an existing category"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of category to be updated"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Modified category object"
        required: true
        schema:
          $ref: "#/definitions/Category"
      responses:
        '200':
          description: "Category updated"
    patch:
      tags:
      - "category"
      summary: "Partially update an existing category"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of category to be updated"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Modified category object"
        required: true
        schema:
          $ref: "#/definitions/Category"
      responses:
        '200':
          description: "Category updated"
    delete:
      tags:
      - "category"
      summary: "Delete a category"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of category to be deleted"
        required: true
        type: "integer"
        format: "int64"
      responses:
        '200':
          description: "Category deleted successfully"
  /category/{id}/products:
    get:
      tags:
      - "category"
      summary: "List products in category"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of category to be listed"
        required: true
        type: "integer"
        format: "int64"
      responses:
        '200':
          description: "All products in category"
          schema:
            type: array
            items:
              $ref: "#/definitions/Product"
  /category/{id}/count:
    get:
      tags:
      - "category"
      summary: "Count products in category"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of category to be counted"
        required: true
        type: "integer"
        format: "int64"
      responses:
        '200':
          description: "Products counts in category"
          schema:
            type: "integer"
            format: "int64"
  /product:
    get:
      tags:
      - "product"
      summary: "List all products"
      responses:
        '200':
          description: "All products listed"
          schema:
            type: array
            items:
              $ref: "#/definitions/Product"
    post:
      tags:
      - "product"
      summary: "Add a new product"
      parameters:
      - in: "body"
        name: "body"
        description: "Product object that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/Product"
      responses:
        "200":
          description: "Product added"
        "405":
          description: "Invalid input"
    patch:
      tags:
      - "product"
      summary: "Batch update a products"
    delete:
      tags:
      - "product"
      summary: "Batch delete a products"
  /product/{id}:
    get:
      tags:
      - "product"
      summary: "Retrieve product name and descriptions"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of product"
        required: true
        type: "integer"
        format: "int64"
      responses:
        '200':
          description: "Product metadata"
          schema:
            $ref: "#/definitions/Product"
    put:
      tags:
      - "product"
      summary: "Update an existing product"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of product to be updated"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Modified product object"
        required: true
        schema:
          $ref: "#/definitions/Product"
      responses:
        '200':
          description: "Category updated"
    patch:
      tags:
      - "product"
      summary: "Partially update an existing product"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of product to be updated"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Modified product object"
        required: true
        schema:
          $ref: "#/definitions/Product"
      responses:
        '200':
          description: "Product updated"
    delete:
      tags:
      - "product"
      summary: "Delete a product"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of product to be deleted"
        required: true
        type: "integer"
        format: "int64"
      responses:
        '200':
          description: "Product deleted successfully"

definitions:
  Category:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      description:
        type: "string"
  Product:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      description:
        type: "string"
      imageUrl:
        type: "string"
      weight:
        type: "number"
        format: "float"
      price:
        type: "number"
        format: "float"
      stock:
        type: "integer"
        format: "int64"
      shopId:
        type: "integer"
        format: "int64"
      categoryId:
        type: "integer"
        format: "int64"
